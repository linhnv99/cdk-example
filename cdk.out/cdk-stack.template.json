{
  "Resources": {
    "ApiF70053CD": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "AuthenticationType": "API_KEY",
        "Name": "appsync-seek-backend"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/Resource"
      }
    },
    "ApiSchema510EECD7": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Definition": "type User {\n  id: ID!\n  name: String\n}\n\ntype Query {\n  getUsers: [User]\n  test: String\n}\n"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/Schema"
      }
    },
    "ApiDefaultApiKeyF991C37B": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        }
      },
      "DependsOn": [
        "ApiSchema510EECD7"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/DefaultApiKey"
      }
    },
    "ApilambdaDatasourceServiceRole2CA75790": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource/ServiceRole/Resource"
      }
    },
    "ApilambdaDatasourceServiceRoleDefaultPolicy3A97E34D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myfunctionDF753486",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApilambdaDatasourceServiceRoleDefaultPolicy3A97E34D",
        "Roles": [
          {
            "Ref": "ApilambdaDatasourceServiceRole2CA75790"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApilambdaDatasource2C776EE2": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "lambdaDatasource",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "myfunctionDF753486",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApilambdaDatasourceServiceRole2CA75790",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource/Resource"
      }
    },
    "ApilambdaDatasourceQuerygetUsersResolver191F1CF6": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "getUsers",
        "TypeName": "Query",
        "DataSourceName": "lambdaDatasource",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "ApilambdaDatasource2C776EE2",
        "ApiSchema510EECD7"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource/QuerygetUsersResolver/Resource"
      }
    },
    "ApilambdaDatasource2ServiceRoleFC8C0A04": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource2/ServiceRole/Resource"
      }
    },
    "ApilambdaDatasource2ServiceRoleDefaultPolicy2CD0D7FA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "myfunctest29F190C4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApilambdaDatasource2ServiceRoleDefaultPolicy2CD0D7FA",
        "Roles": [
          {
            "Ref": "ApilambdaDatasource2ServiceRoleFC8C0A04"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource2/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApilambdaDatasource22BC516E5": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "Name": "lambdaDatasource2",
        "Type": "AWS_LAMBDA",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "myfunctest29F190C4",
              "Arn"
            ]
          }
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ApilambdaDatasource2ServiceRoleFC8C0A04",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource2/Resource"
      }
    },
    "ApilambdaDatasource2QuerytestResolverF411BD7F": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "ApiF70053CD",
            "ApiId"
          ]
        },
        "FieldName": "test",
        "TypeName": "Query",
        "DataSourceName": "lambdaDatasource2",
        "Kind": "UNIT"
      },
      "DependsOn": [
        "ApilambdaDatasource22BC516E5",
        "ApiSchema510EECD7"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/Api/lambdaDatasource2/QuerytestResolver/Resource"
      }
    },
    "ExampleVPC8F37DF5D": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/Resource"
      }
    },
    "ExampleVPCPublicSubnet1Subnet294FC2B8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/Subnet"
      }
    },
    "ExampleVPCPublicSubnet1RouteTable5F58AF51": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/RouteTable"
      }
    },
    "ExampleVPCPublicSubnet1RouteTableAssociation68C9A56C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet1RouteTable5F58AF51"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet1Subnet294FC2B8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "ExampleVPCPublicSubnet1DefaultRouteA6CD80A2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet1RouteTable5F58AF51"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ExampleVPCIGWBEE6F840"
        }
      },
      "DependsOn": [
        "ExampleVPCVPCGWB46DD980"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/DefaultRoute"
      }
    },
    "ExampleVPCPublicSubnet1EIP29FE0900": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/EIP"
      }
    },
    "ExampleVPCPublicSubnet1NATGateway7BDCDA06": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet1Subnet294FC2B8"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "ExampleVPCPublicSubnet1EIP29FE0900",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet1/NATGateway"
      }
    },
    "ExampleVPCPublicSubnet2Subnet1BF50990": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/Subnet"
      }
    },
    "ExampleVPCPublicSubnet2RouteTable742BB266": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/RouteTable"
      }
    },
    "ExampleVPCPublicSubnet2RouteTableAssociation6EC04393": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet2RouteTable742BB266"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet2Subnet1BF50990"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "ExampleVPCPublicSubnet2DefaultRoute6A2E25CA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet2RouteTable742BB266"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ExampleVPCIGWBEE6F840"
        }
      },
      "DependsOn": [
        "ExampleVPCVPCGWB46DD980"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/DefaultRoute"
      }
    },
    "ExampleVPCPublicSubnet2EIP894E28EF": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/EIP"
      }
    },
    "ExampleVPCPublicSubnet2NATGateway3E9981C6": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet2Subnet1BF50990"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "ExampleVPCPublicSubnet2EIP894E28EF",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet2/NATGateway"
      }
    },
    "ExampleVPCPublicSubnet3Subnet9289C934": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1d",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/Subnet"
      }
    },
    "ExampleVPCPublicSubnet3RouteTable3BFFB901": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/RouteTable"
      }
    },
    "ExampleVPCPublicSubnet3RouteTableAssociation1B8E5AFB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet3RouteTable3BFFB901"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet3Subnet9289C934"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/RouteTableAssociation"
      }
    },
    "ExampleVPCPublicSubnet3DefaultRoute8582ED5F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPublicSubnet3RouteTable3BFFB901"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "ExampleVPCIGWBEE6F840"
        }
      },
      "DependsOn": [
        "ExampleVPCVPCGWB46DD980"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/DefaultRoute"
      }
    },
    "ExampleVPCPublicSubnet3EIP8B84186B": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/EIP"
      }
    },
    "ExampleVPCPublicSubnet3NATGateway5168A317": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "ExampleVPCPublicSubnet3Subnet9289C934"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "ExampleVPCPublicSubnet3EIP8B84186B",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PublicSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PublicSubnet3/NATGateway"
      }
    },
    "ExampleVPCPrivateSubnet1SubnetE2C97492": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet1/Subnet"
      }
    },
    "ExampleVPCPrivateSubnet1RouteTable95BEEEE0": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet1/RouteTable"
      }
    },
    "ExampleVPCPrivateSubnet1RouteTableAssociation6020C355": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet1RouteTable95BEEEE0"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPrivateSubnet1SubnetE2C97492"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "ExampleVPCPrivateSubnet1DefaultRouteECD6FC08": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet1RouteTable95BEEEE0"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ExampleVPCPublicSubnet1NATGateway7BDCDA06"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "ExampleVPCPrivateSubnet2Subnet48274A3D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1c",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet2/Subnet"
      }
    },
    "ExampleVPCPrivateSubnet2RouteTableC6A0F7FA": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet2/RouteTable"
      }
    },
    "ExampleVPCPrivateSubnet2RouteTableAssociation8A4CC0D6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet2RouteTableC6A0F7FA"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPrivateSubnet2Subnet48274A3D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "ExampleVPCPrivateSubnet2DefaultRoute7143D661": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet2RouteTableC6A0F7FA"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ExampleVPCPublicSubnet2NATGateway3E9981C6"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "ExampleVPCPrivateSubnet3Subnet50876B1B": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "AvailabilityZone": "ap-northeast-1d",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet3/Subnet"
      }
    },
    "ExampleVPCPrivateSubnet3RouteTableE8247920": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC/PrivateSubnet3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet3/RouteTable"
      }
    },
    "ExampleVPCPrivateSubnet3RouteTableAssociationC1592B4C": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet3RouteTableE8247920"
        },
        "SubnetId": {
          "Ref": "ExampleVPCPrivateSubnet3Subnet50876B1B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet3/RouteTableAssociation"
      }
    },
    "ExampleVPCPrivateSubnet3DefaultRoute5F991EAF": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "ExampleVPCPrivateSubnet3RouteTableE8247920"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "ExampleVPCPublicSubnet3NATGateway5168A317"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/PrivateSubnet3/DefaultRoute"
      }
    },
    "ExampleVPCIGWBEE6F840": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "cdk-stack/ExampleVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/IGW"
      }
    },
    "ExampleVPCVPCGWB46DD980": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        },
        "InternetGatewayId": {
          "Ref": "ExampleVPCIGWBEE6F840"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/ExampleVPC/VPCGW"
      }
    },
    "AuroraSeekClusterSubnets4C33E2A8": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets for AuroraSeekCluster database",
        "SubnetIds": [
          {
            "Ref": "ExampleVPCPrivateSubnet1SubnetE2C97492"
          },
          {
            "Ref": "ExampleVPCPrivateSubnet2Subnet48274A3D"
          },
          {
            "Ref": "ExampleVPCPrivateSubnet3Subnet50876B1B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/AuroraSeekCluster/Subnets/Default"
      }
    },
    "AuroraSeekClusterSecurityGroup81B9CC0A": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "ExampleVPC8F37DF5D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/AuroraSeekCluster/SecurityGroup/Resource"
      }
    },
    "AuroraSeekClusterSecret6A58FA84": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\"username\":\"admin\"}"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdk-stack/AuroraSeekCluster/Secret/Resource"
      }
    },
    "AuroraSeekClusterSecretAttachment56947955": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "AuroraSeekClusterSecret6A58FA84"
        },
        "TargetId": {
          "Ref": "AuroraSeekClusterB5E450A5"
        },
        "TargetType": "AWS::RDS::DBCluster"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/AuroraSeekCluster/Secret/Attachment/Resource"
      }
    },
    "AuroraSeekClusterB5E450A5": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "Engine": "aurora-mysql",
        "DatabaseName": "Seek",
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": {
          "Ref": "AuroraSeekClusterSubnets4C33E2A8"
        },
        "EnableHttpEndpoint": true,
        "EngineMode": "serverless",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "AuroraSeekClusterSecret6A58FA84"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "AuroraSeekClusterSecret6A58FA84"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "AuroraSeekClusterSecurityGroup81B9CC0A",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Snapshot",
      "DeletionPolicy": "Snapshot",
      "Metadata": {
        "aws:cdk:path": "cdk-stack/AuroraSeekCluster/Resource"
      }
    },
    "myfunctionServiceRole41691664": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/my-function/ServiceRole/Resource"
      }
    },
    "myfunctionServiceRoleDefaultPolicy4ECD21C4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "rds-data:BatchExecuteStatement",
                "rds-data:BeginTransaction",
                "rds-data:CommitTransaction",
                "rds-data:ExecuteStatement",
                "rds-data:RollbackTransaction"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AuroraSeekClusterSecretAttachment56947955"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "myfunctionServiceRoleDefaultPolicy4ECD21C4",
        "Roles": [
          {
            "Ref": "myfunctionServiceRole41691664"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/my-function/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "myfunctionDF753486": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905S3Bucket0D8D88C8"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905S3VersionKey24263C02"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905S3VersionKey24263C02"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "myfunctionServiceRole41691664",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SECRET_ID": {
              "Ref": "AuroraSeekClusterSecretAttachment56947955"
            },
            "DATABASE_URL": "",
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x",
        "Timeout": 20
      },
      "DependsOn": [
        "myfunctionServiceRoleDefaultPolicy4ECD21C4",
        "myfunctionServiceRole41691664"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/my-function/Resource",
        "aws:asset:path": "asset.4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "myfunctestServiceRoleE9666132": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/my-func-test/ServiceRole/Resource"
      }
    },
    "myfunctest29F190C4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420S3BucketAAEF5CCC"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420S3VersionKey9EB65336"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420S3VersionKey9EB65336"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "myfunctestServiceRoleE9666132",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
          }
        },
        "Handler": "index.test",
        "MemorySize": 1024,
        "Runtime": "nodejs14.x",
        "Timeout": 20
      },
      "DependsOn": [
        "myfunctestServiceRoleE9666132"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-stack/my-func-test/Resource",
        "aws:asset:path": "asset.9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420",
        "aws:asset:is-bundled": true,
        "aws:asset:property": "Code"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/11S207DMAz9Ft6zjDGExBu7wDQxTWVFvLuZ2bK1SYmTTVXVfyeX3eDJ9vGxfWJnwAePz/z+7gWO1BPrfb8V2iBvcwtiz1ZI2hmBbESE1mMbqTZsohVZ44Rlk2+VgYEKLZoQnPkdC+1aqGtqlODtzEC9/SlHtQysGH0s/ka52GIFAfD4OzZsAVWxhilYyJMGn7qJwqjycB0b/I5JqHi70mVkR5vpUoomKo1ex1A88ParFgH7yiYsc4VP5K5QGF909VbaWfyEIrVL+BXzO9FCgpVaXcjBeZ1nwSzBzsDiERqWGXnw7rXxXPmFef9MSEpO0cj63W8rVJblKJyRtpkZ7eqo4RbomFmTPxUa//YSiSalo3CJNOhSNB3fAmGHBRD6ViapmY5PhR2jCFIFCjZoeJtGBl4yn2A2aG8UXgj/Mx0r4wF7Sq9xR3wZzZtTIi6Mhj0If4p4/Fo+5mMn9mjHXtqplPvm54KuY6ER31H/MHjig6H/szuSsmecsrJCvkr2F+IC+6vQAgAA"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-stack/CDKMetadata/Default"
      }
    }
  },
  "Parameters": {
    "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905S3Bucket0D8D88C8": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905\""
    },
    "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905S3VersionKey24263C02": {
      "Type": "String",
      "Description": "S3 key for asset version \"4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905\""
    },
    "AssetParameters4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905ArtifactHashE89DF71B": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4abc3982cc61b6fb5c9ca29caf8e3020332d8c0b712be577479709e329b62905\""
    },
    "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420S3BucketAAEF5CCC": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420\""
    },
    "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420S3VersionKey9EB65336": {
      "Type": "String",
      "Description": "S3 key for asset version \"9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420\""
    },
    "AssetParameters9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420ArtifactHash80E0AB76": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9a3c506aa0c564bd75de0d74131b5d1ebea71f8d2e35574ecd459857cdaf0420\""
    }
  }
}